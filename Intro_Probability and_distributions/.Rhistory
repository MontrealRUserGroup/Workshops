#
#
library(car)#
#
#
#looking at the central limit theorem#
dice<-1:6#
rolls<-100#
games<-1000#
tournament<-matrix(sample(dice, rolls*games, replace=T), nrow=games, ncol=rolls)#
#
apply(X=tournament, MARGIN=1, FUN=hist)#
#
scores<-apply(X=tournament, MARGIN=1, FUN=sd)#
hist(scores)#
#
#
qq.plot(scores)
head(scores)
qq.plot
Ã‰qq.plot
?qq.plot
?rbeta
rnorm
?rnorm
dnorm(10)
?binom
?rbinom
dbinom(1, 24, prob=1/6*1/6)
dbinom(0, 24, prob=1/6*1/6)
dbinom(2, 24, prob=1/6*1/6)
pbinom(size=24)
pbinom(1, size=24)
pbinom(1, size=24, prob=1/6*1/6)
qbinom(1,24, 1/6^2)
pbinom(0, size=24, prob=1/6*1/6)
1-pbinom(0, size=24, prob=1/6*1/6)
qbinom(1/2, 24, 1/6*1/6)
qbinom(3/4, 24, 1/6*1/6)
qbinom(1, 24, 1/6*1/6)
qbinom(0.005, 24, 1/6*1/6)
qbinom(0.95, 24, 1/6*1/6)
qqplot
library(Rcmdr)
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
remove(.x)#
.x <- seq(-6.869, 6.869, length.out=100)#
plot(.x, dt(.x, df=5), xlab="t", ylab="Density", main="t Distribution: df = #
  5", type="l")#
abline(h=0, col="gray")#
remove(.x)#
.x <- seq(0.028, 12.425, length.out=100)#
plot(.x, df(.x, df1=5, df2=10), xlab="f", ylab="Density", main="F #
  Distribution: Numerator df = 5, Denominator df = 10", type="l")#
abline(h=0, col="gray")#
remove(.x)
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")
for(i in 1:10){#
#
mean<-i/5#
par(new=T)#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
remove(.x)}
#
for(i in 1:10){#
#
mean<-i/5#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)}
#
for(i in 1:10){#
#
mean.i<-i/5#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=1), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)}
for(i in 1:10){#
	for(j in 1:10)#
#
mean.i<-i/5#
sd.j<-j/5#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)}
for(i in 1:10){#
	for(j in 1:10){#
#
mean.i<-i/5#
sd.j<-j/5#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
for(mean.i in c(-1,0,1/2,1)){#
	for(sd.j in c(-1,0,1/2,1)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
par(new=F)#
for(mean.i in c(-1,0,1/2,1)){#
	for(sd.j in c(1/2,1,2)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l")#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
#
par(new=F)#
for(mean.i in c(-1,0,1/2,1)){#
	for(sd.j in c(1/2,1,2)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.2))#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
par(new=F)#
for(mean.i in c(-1,0,1/2,1)){#
	for(sd.j in c(1/2,1,2)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.5))#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
par(new=F)#
for(mean.i in c(-1,0,1/2,1)){#
	for(sd.j in c(1/2,1,2)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.7))#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
par(new=F)#
for(mean.i in c(-1,0,1/2,1)){#
	for(sd.j in c(1/2,1,2)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i, sd=sd.j), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.8))#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
mean.col<-rainbow(length(mean.i))
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))
mean.col
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[i]), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[i]), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
j=1#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	#for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[i]), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
#}
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[j]), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}
#
legend(-3,0.8, legend=mean.i, col=mean.col, title="mean")
legend(-3,0.8, legend=mean.i, fill=mean.col, title="mean")
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[j]), xlab="x", ylab="Density", #
  main=expression(paste("Normal Distribution: ", mu, " = 0, ", sigma, " = #
  1")), type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}#
#
legend(-3,0.8, legend=mean.i, fill=mean.col, title="mean")#
legend(-3,0.6, legend=sd.i, lwd=sd.lwd, title="sd")
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[j]), xlab="x", ylab="Density", #
  main="Normal Distribution", type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}#
#
legend(-3,0.8, legend=mean.i, fill=mean.col, title="mean")#
legend(-3,0.6, legend=sd.i, lwd=sd.lwd, title="sd")#
#
#
#
.x <- seq(-6.869, 6.869, length.out=100)#
plot(.x, dt(.x, df=5), xlab="t", ylab="Density", main="t Distribution: df = #
  5", type="l")#
abline(h=0, col="gray")#
remove(.x)#
.x <- seq(0.028, 12.425, length.out=100)#
plot(.x, df(.x, df1=5, df2=10), xlab="f", ylab="Density", main="F #
  Distribution: Numerator df = 5, Denominator df = 10", type="l")#
abline(h=0, col="gray")#
remove(.x)
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[j]), xlab="x", ylab="Density", #
  main="Normal Distribution", type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}#
#
legend(-3,0.8, legend=mean.i, fill=mean.col, title="mean")#
legend(-3,0.6, legend=sd.i, lwd=sd.lwd, title="sd")
legend(-3,0.6, legend=sd.i, lwd=sd.lwd, title="sd")
mean.i<-c(-1,0,1/2,1)#
sd.j<-c(1/2,1,2)#
mean.col<-rainbow(length(mean.i))#
sd.lwd<-1:length(sd.j)#
#
#
par(new=F)#
for(i in 1:length(mean.i)){#
	for(j in 1:length(sd.j)){#
#
.x <- seq(-3.291, 3.291, length.out=100)#
plot(.x, dnorm(.x, mean= mean.i[i], sd=sd.j[j]), xlab="x", ylab="Density", #
  main="Normal Distribution", type="l", xlim=c(-3,3), ylim=c(0,0.8), col= mean.col[i], lwd=sd.lwd[j])#
abline(h=0, col="gray")#
par(new=T)#
remove(.x)#
#
}#
}#
#
legend(-3,0.8, legend=mean.i, fill=mean.col, title="mean")#
legend(-3,0.6, legend=sd.j, lwd=sd.lwd, title="sd")
